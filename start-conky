#!/bin/bash
# Copyright 2014 Dabo Ross <daboross@daboross.net>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ---
# Conky script 'start-conky'
#
# This script will start a different set of conky instances depending on two variables, first is (in this case)
#  the OS (ubuntu or eOS), determined by whether the 'pantheon' executable exists.
# The second variable is whether there is one monitor, or multiple monitors.
#  It will start a different set of scripts depending on the number of monitors.

_get_first_dir_name() {
    # Tell if we're in elementary by seeing if pantheon exists
    if [[ "$(whereis pantheon)" == "pantheon: /usr/share/pantheon" ]]; then
        echo "elementary"
    else
        echo "ubuntu"
    fi
}

_get_second_dir_name() {
    # Use xrandr to tell the number of connected monitors. Note that this greps for ' connected', not just 'connected'.
    case "$(xrandr | grep -c ' connected')" in
        1)
            echo "single" ;;
        2)
            echo "double" ;;
        *)
            echo "double" ;;
    esac
}

_start_conky() {
    # Kill all conky before starting
    killall conky &> /dev/null
    # Get the base configuration directory from the variables
    local -r CONKY_CONFIG_DIR="$HOME/.config/conky/$(_get_first_dir_name)/$(_get_second_dir_name)"
    # Define where the log files should be put
    local -r CONKY_LOG_BASE="$HOME/.cache/conky-log-$(_get_first_dir_name)-$(_get_second_dir_name)"
    # Start conky once with each configuration file in the directory
    find "$CONKY_CONFIG_DIR" -type f -print -exec bash -c 'FILE={}; sleep 0.2; (conky -c $FILE &> "${CONKY_LOG_BASE}-$(basename $FILE)") &' \;
}
_start_conky_no_log() {
    # This function does the same as above, except for without the log redirection.
    killall conky &> /dev/null
    local -r CONKY_CONFIG_DIR="$HOME/.config/conky/$(_get_first_dir_name)/$(_get_second_dir_name)"
    find "$CONKY_CONFIG_DIR" -type f -print -exec bash -c 'FILE={}; sleep 0.2; conky -c $FILE &' \;
}
# Command line handling
case "$1" in
    now)
        _start_conky_no_log ;;
    *)
        _start_conky ;;
esac
